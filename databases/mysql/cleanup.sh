#!/bin/bash

# Colores para output
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${BLUE}üßπ Sistema de Limpieza para MySQL + phpMyAdmin...${NC}"

echo -e "\n${GREEN}üéØ Opciones de limpieza disponibles:${NC}"
echo -e "1. üìã Limpiar logs de ambos contenedores"
echo -e "2. üîÑ Reiniciar stack (mantener datos)"
echo -e "3. üóëÔ∏è Limpiar datos MySQL (mantener estructura)"
echo -e "4. ‚ö†Ô∏è Eliminar directorio data completo (PELIGROSO)"
echo -e "5. üî• Eliminar todo (contenedores + red + vol√∫menes)"
echo -e "6. üßπ Limpiar backups antiguos"
echo -e "7. ‚ùå Cancelar"

read -p "Selecciona una opci√≥n (1-7): " choice

case $choice in
    1)
        echo -e "\n${BLUE}üìã Limpiando logs de contenedores...${NC}"
        
        # Verificar si los contenedores existen
        MYSQL_STATUS=$(docker ps -aq -f name=mysql_container 2>/dev/null)
        PHPMYADMIN_STATUS=$(docker ps -aq -f name=phpmyadmin_container 2>/dev/null)
        
        if [ ! -z "$MYSQL_STATUS" ]; then
            echo -e "   üóÑÔ∏è Limpiando logs de MySQL..."
            docker logs mysql_container > /dev/null 2>&1
            echo -e "   ‚úÖ Logs de MySQL limpiados"
        fi
        
        if [ ! -z "$PHPMYADMIN_STATUS" ]; then
            echo -e "   üåê Limpiando logs de phpMyAdmin..."
            docker logs phpmyadmin_container > /dev/null 2>&1
            echo -e "   ‚úÖ Logs de phpMyAdmin limpiados"
        fi
        
        echo -e "${GREEN}‚úÖ Limpieza de logs completada${NC}"
        ;;
        
    2)
        echo -e "\n${BLUE}üîÑ Reiniciando stack MySQL + phpMyAdmin...${NC}"
        
        echo -e "   üõë Deteniendo servicios..."
        docker-compose down
        
        echo -e "   üöÄ Iniciando servicios..."
        docker-compose up -d
        
        echo -e "   ‚è≥ Esperando que MySQL est√© listo..."
        sleep 10
        
        # Verificar que est√©n corriendo
        MYSQL_STATUS=$(docker ps -q -f name=mysql_container 2>/dev/null)
        PHPMYADMIN_STATUS=$(docker ps -q -f name=phpmyadmin_container 2>/dev/null)
        
        if [ ! -z "$MYSQL_STATUS" ] && [ ! -z "$PHPMYADMIN_STATUS" ]; then
            echo -e "${GREEN}‚úÖ Stack reiniciado exitosamente${NC}"
            echo -e "   üóÑÔ∏è MySQL: Corriendo"
            echo -e "   üåê phpMyAdmin: http://localhost:8081"
        else
            echo -e "${RED}‚ùå Error al reiniciar el stack${NC}"
        fi
        ;;
        
    3)
        echo -e "\n${YELLOW}‚ö†Ô∏è Esta acci√≥n eliminar√° TODOS los datos de MySQL${NC}"
        echo -e "Se mantendr√° la estructura pero se perder√°n los datos"
        read -p "¬øEst√°s seguro? (escribe 'SI' para confirmar): " confirm
        
        if [ "$confirm" = "SI" ]; then
            echo -e "\n${BLUE}üóëÔ∏è Limpiando datos MySQL...${NC}"
            
            # Detener MySQL
            docker-compose stop mysql
            
            # Eliminar archivos de datos pero mantener estructura
            if [ -d "./data" ]; then
                echo -e "   üóÑÔ∏è Eliminando archivos de bases de datos..."
                rm -rf ./data/mydb/* 2>/dev/null
                find ./data -name "*.ibd" -delete 2>/dev/null
                find ./data -name "binlog.*" -delete 2>/dev/null
                echo -e "   ‚úÖ Datos eliminados"
            fi
            
            # Reiniciar MySQL para recrear datos
            echo -e "   üöÄ Reiniciando MySQL..."
            docker-compose up -d mysql
            
            echo -e "${GREEN}‚úÖ Datos MySQL limpiados y recreados${NC}"
        else
            echo -e "${YELLOW}‚ùå Operaci√≥n cancelada${NC}"
        fi
        ;;
        
    4)
        echo -e "\n${RED}‚ö†Ô∏è PELIGRO: Esta acci√≥n eliminar√° TODO el directorio data${NC}"
        echo -e "Se perder√°n TODOS los datos y configuraciones de MySQL"
        read -p "¬øEst√°s COMPLETAMENTE seguro? (escribe 'ELIMINAR' para confirmar): " confirm
        
        if [ "$confirm" = "ELIMINAR" ]; then
            echo -e "\n${BLUE}üí• Eliminando directorio data completo...${NC}"
            
            # Detener servicios
            docker-compose down
            
            # Eliminar directorio data
            if [ -d "./data" ]; then
                echo -e "   üóÇÔ∏è Eliminando ./data/..."
                rm -rf ./data/
                echo -e "   ‚úÖ Directorio data eliminado"
            fi
            
            echo -e "${GREEN}‚úÖ Directorio data eliminado completamente${NC}"
            echo -e "${YELLOW}üí° La pr√≥xima vez que inicies se crear√° un MySQL limpio${NC}"
        else
            echo -e "${YELLOW}‚ùå Operaci√≥n cancelada${NC}"
        fi
        ;;
        
    5)
        echo -e "\n${RED}‚ö†Ô∏è PELIGRO: Esta acci√≥n eliminar√° TODO${NC}"
        echo -e "Se eliminar√°n: contenedores, red, vol√∫menes y datos"
        read -p "¬øEst√°s COMPLETAMENTE seguro? (escribe 'ELIMINAR_TODO' para confirmar): " confirm
        
        if [ "$confirm" = "ELIMINAR_TODO" ]; then
            echo -e "\n${BLUE}üî• Eliminando todo...${NC}"
            
            # Detener y eliminar todo
            docker-compose down -v --remove-orphans
            
            # Eliminar red personalizada si existe
            docker network rm mysql_network 2>/dev/null
            
            # Eliminar directorio data
            if [ -d "./data" ]; then
                rm -rf ./data/
            fi
            
            # Eliminar contenedores hu√©rfanos si existen
            docker container prune -f --filter label=com.docker.compose.project=mysql
            
            echo -e "${GREEN}‚úÖ TODO eliminado completamente${NC}"
            echo -e "${YELLOW}üí° Puedes iniciar desde cero con ./start.sh${NC}"
        else
            echo -e "${YELLOW}‚ùå Operaci√≥n cancelada${NC}"
        fi
        ;;
        
    6)
        echo -e "\n${BLUE}üßπ Limpiando backups antiguos...${NC}"
        
        if [ -d "./backups" ]; then
            echo -e "   üìä Backups actuales:"
            ls -la ./backups/ | wc -l | xargs echo "   Total de archivos:"
            
            # Eliminar backups m√°s antiguos de 7 d√≠as
            find ./backups -name "mysql_*backup*" -mtime +7 -delete 2>/dev/null
            
            echo -e "   üóëÔ∏è Backups antiguos (>7 d√≠as) eliminados"
            
            REMAINING=$(ls ./backups/mysql_*backup* 2>/dev/null | wc -l)
            echo -e "${GREEN}‚úÖ Limpieza completada. Backups restantes: $REMAINING${NC}"
        else
            echo -e "${YELLOW}üìÇ No hay directorio de backups${NC}"
        fi
        ;;
        
    7)
        echo -e "${YELLOW}‚ùå Limpieza cancelada${NC}"
        exit 0
        ;;
        
    *)
        echo -e "${RED}‚ùå Opci√≥n inv√°lida${NC}"
        exit 1
        ;;
esac

echo -e "\n${YELLOW}üí° Estado actual:${NC}"
MYSQL_STATUS=$(docker ps -q -f name=mysql_container 2>/dev/null)
PHPMYADMIN_STATUS=$(docker ps -q -f name=phpmyadmin_container 2>/dev/null)

if [ ! -z "$MYSQL_STATUS" ]; then
    echo -e "   ‚úÖ MySQL: Corriendo"
else
    echo -e "   ‚ùå MySQL: Detenido"
fi

if [ ! -z "$PHPMYADMIN_STATUS" ]; then
    echo -e "   ‚úÖ phpMyAdmin: Corriendo"
else
    echo -e "   ‚ùå phpMyAdmin: Detenido"
fi